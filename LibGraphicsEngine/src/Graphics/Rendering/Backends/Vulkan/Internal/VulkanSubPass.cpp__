#include "Graphics/Rendering/Backends/Vulkan/Internal/VulkanSubPass.hpp"
#include "Graphics/Rendering/Backends/Vulkan/Internal/VulkanInitializers.hpp"
#include "Graphics/Rendering/Backends/Vulkan/Internal/VulkanHelpers.hpp"

using namespace GraphicsEngine;
using namespace GraphicsEngine::Graphics;

VulkanSubPass::VulkanSubPass()
	: mSubpassDescription{}
	, mId(0)
{}

VulkanSubPass::VulkanSubPass(const std::vector<VkAttachmentReference>& colorReferences, const VkAttachmentReference& depthStencilReference,
							 const std::vector<VkAttachmentReference>& inputReferences, VkPipelineBindPoint pipelineBindPoint, uint32_t id)
	: mSubpassDescription{}
	, mId(id)
{
	mSubpassDescription =
		VulkanInitializers::SubpassDescription(pipelineBindPoint, static_cast<uint32_t>(colorReferences.size()), colorReferences.data(),
												&depthStencilReference, static_cast<uint32_t>(inputReferences.size()), inputReferences.data());
}

VulkanSubPass::~VulkanSubPass()
{
	mSubpassDescription = {};
}

const VkSubpassDescription& VulkanSubPass::GetSubpassDescription() const
{
	return mSubpassDescription;
}

uint32_t VulkanSubPass::GetId() const
{
	return mId;
}